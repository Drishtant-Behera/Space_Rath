import pygamefrom pygame import QUITimport randomimport mathimport numpy as npscreen_width = 850screen_height = 600surface = pygame.display.set_mode((screen_width, screen_height))Wall_Info = (100, 100, 100, 20, 1)def DisplayMultiDimensionalList(list):    print(list)Player_Info = (200, 200, (400, 400), (400, 400), 16, (255, 255, 255), surface, "Corupted_Player.png")Wall_Info = (100, 100, 100, 20, 1)class PLayer:    def __init__(self, Player_Health, Player_MaxHealth, Player_Cords, Player_HitboxCords, Player_Cords_Offset, color,                 surface, PlayerImgPlaceHolder):        self.Player_Health = Player_Health        self.Player_MaxHealth = Player_MaxHealth        self.Player_Cords = Player_Cords        self.Player_HitboxCords = Player_HitboxCords        self.Player_Cords_Offset = Player_Cords_Offset        self.color = color        self.surface = surface        self.PlayerImgPlaceHolder = PlayerImgPlaceHolder        self.Player_Image = pygame.image.load(self.PlayerImgPlaceHolder)        self.rect = self.Player_Image.get_rect()    def DrawingHitBoxes(self):        pygame.draw.rect(self.surface, self.color, pygame.Rect(30, 30, 60, 60), 1)    def DrawPlayerSprite(self):        pygame.image.load(self.PlayerImgPlaceHolder)class Bullet(PLayer):    def __init__(self, color, x, y, width, height, speed, targetx, targety):        super().__init__(color, x, y, width, height, speed)        angle = math.atan2(targety - y, targetx - x)        print('Angle in degrees:', int(angle * 180 / math.pi))        self.dx = math.cos(angle) * speed        self.dy = math.sin(angle) * speed        self.x = x        self.y = y    def move(self):        self.x = self.x + self.dx        self.y = self.y + self.dy        self.rect.x = int(self.x)        self.rect.y = int(self.y)bullets = []class Wall(Bullet):    def __init__(self, xPosition_Wall, yPosition_Wall, xWidth_Wall, yWidth_Wall, BorderThickness_Wall):        self.xPosition_Wall = xPosition_Wall        self.yPosition_Wall = yPosition_Wall        self.xWidth_Wall = xWidth_Wall        self.yWidth_Wall = yWidth_Wall        self.BorderThickness_Wall = BorderThickness_Wall    def drawWall(self):        pygame.draw.rect(self.surface, self.color,                         pygame.rect(self.xPosition_Wall, self.yPosition_Wall, self.xWidth_Wall, self.yWidth_Wall),                         self.BorderThickness_Wall)done = Falsewhile not done:    for event in pygame.event.get():        if event.type == pygame.QUIT:            done = True